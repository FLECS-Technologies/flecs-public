openapi: 3.0.3
info:
  title: FLECS Daemon API
  version: 1.0.0-beta.4
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

components:
  schemas:
    additionalInfo:
      type: object
      description: Additional info
      properties:
        additionalInfo:
          type: string
    app:
      type: object
      description: App name
      properties:
        app:
          type: string
          example: "tech.flecs.app"
    conffiles:
      type: object
      description: Bind-mounted configuration files of an instance
      properties:
        conffiles:
          type: array
          items:
            type: object
            properties:
              container:
                type: string
                example: "/etc/conf.d/configuration.cfg"
              host:
                type: string
                example: "/var/lib/flecs/instances/0123abcd/conf/configuration.cfg"
    hostname:
      type: object
      description: Hostname of an instance
      properties:
        hostname:
          type: string
          example: flecs-0123abcd
    instanceId:
      type: object
      description: Instance ID
      properties:
        instanceId:
          type: string
          example: "87654fed"
    instanceName:
      type: object
      description: Instance name
      properties:
        instanceName:
          type: string
          example: "Smart home"
    ipAddress:
      type: object
      description: IP address of an instance
      properties:
        ipAddress:
          type: string
          example: "172.21.0.2"
    licenseKey:
      type: object
      description: License key for app installation
      properties:
        licenseKey:
          type: string
          example: "538E-A5E8-84A3-D798"
    mounts:
      type: object
      description: Bind mounts of an instance
      properties:
        mounts:
          type: array
          items:
            type: object
            properties:
              container:
                type: string
                example: "/path/to/dir"
              host:
                type: string
                example: "/path/to/host/dir"
    ports:
      type: object
      description: Allocated network ports of an instance
      properties:
        ports:
          type: array
          items:
            type: object
            properties:
              container:
                type: string
                example: "8080"
              host:
                type: string
                example: "18080"
    version:
      type: object
      description: App version
      properties:
        version:
          type: string
          example: "v4.0.6"
    volumes:
      type: object
      description: Automatic volumes of an instance
      properties:
        volumes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "var"
              path:
                type: string
                example: "/var/app"

    response_500:
      type: object
      description: Internal error
      properties:
        additionalInfo:
          type: string
          example: "Details what went wrong"

    installed_app:
      type: object
      description: Installed app metadata
      allOf:
        - $ref: "#/components/schemas/app"
        - type: object
          properties:
            versions:
              type: array
              items:
                $ref: "#/components/schemas/app_versions"
            instances:
              type: array
              items:
                $ref: "#/components/schemas/app_instances"
    app_versions:
      type: object
      description: App versions
      allOf:
        - type: object
          properties:
            desired:
              type: string
              example: "installed"
            installedSize:
              type: integer
              example: 10485760
            status:
              type: string
              example: "installed" # todo: refine possible values
        - $ref: "#/components/schemas/version"
    app_instances:
      type: object
      description: App instances
      allOf:
        - type: object
          properties:
            desired:
              type: string
              example: "running"
        - $ref: "#/components/schemas/instanceId"
        - $ref: "#/components/schemas/instanceName"
        - type: object
          properties:
            status:
              type: string
              example: "running" # todo: refine possible values
        - $ref: "#/components/schemas/version"

  responses:
    response_400:
      description: Malformed request body
      content:
        application/json:
          schema:
            type: object
            properties:
              additionalInfo:
                type: string
                example: "Explanation what is wrong"

paths:
  /app/install:
    post:
      summary: Install an app from the FLECS marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/app"
                - $ref: "#/components/schemas/licenseKey"
                - $ref: "#/components/schemas/version"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/version"
        "400":
          $ref: "#/components/responses/response_400"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response_500"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/version"

  /app/list:
    get:
      summary: List installed apps and their instances
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - type: object
                    properties:
                      appList:
                        type: array
                        items:
                          $ref: "#/components/schemas/installed_app"

  #/app/sideload:
  #  put:
  #    summary: Sideload an app from its manifest
  #    requestBody:
  #      content:
  #        application/yaml:
  #          schema:
  #    responses:
  #      "200":
  #        description: Success
  #        content:
  #          application/json:
  #            schema:
  #              allOf:
  #                - $ref: "#/components/schemas/additionalInfo"
  #                - $ref: "#/components/schemas/app"
  #                - $ref: "#/components/schemas/version"

  /app/uninstall:
    post:
      summary: Uninstall an app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/app"
                - $ref: "#/components/schemas/version"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/version"
        "400":
          $ref: "#/components/responses/response_400"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response_500"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/version"

  /instance/create:
    post:
      summary: Create new instance of an installed app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/app"
                - $ref: "#/components/schemas/instanceName"
                - $ref: "#/components/schemas/version"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/instanceName"
                  - $ref: "#/components/schemas/version"
        "400":
          $ref: "#/components/responses/response_400"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response_500"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceName"
                  - $ref: "#/components/schemas/version"

  /instance/delete:
    post:
      summary: Delete an app instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - allOf:
                    - $ref: "#/components/schemas/app"
                    - $ref: "#/components/schemas/instanceId"
                    - $ref: "#/components/schemas/version"
                - $ref: "#/components/schemas/instanceId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/version"
        "400":
          $ref: "#/components/responses/response_400"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response_500"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/version"

  /instance/details:
    post:
      summary: Obtain details of an app instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/instanceId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/conffiles"
                  - $ref: "#/components/schemas/hostname"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/ipAddress"
                  - $ref: "#/components/schemas/mounts"
                  - $ref: "#/components/schemas/ports"
                  - $ref: "#/components/schemas/version"
                  - $ref: "#/components/schemas/volumes"
        "400":
          $ref: "#/components/responses/response_400"

  /instance/start:
    post:
      summary: Start an app instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - allOf:
                    - $ref: "#/components/schemas/app"
                    - $ref: "#/components/schemas/instanceId"
                    - $ref: "#/components/schemas/version"
                - $ref: "#/components/schemas/instanceId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/version"
        "400":
          $ref: "#/components/responses/response_400"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response_500"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/version"
                  - $ref: "#/components/schemas/instanceId"

  /instance/stop:
    post:
      summary: Stop an app instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - allOf:
                    - $ref: "#/components/schemas/app"
                    - $ref: "#/components/schemas/instanceId"
                    - $ref: "#/components/schemas/version"
                - $ref: "#/components/schemas/instanceId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/additionalInfo"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/version"
        "400":
          $ref: "#/components/responses/response_400"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response_500"
                  - $ref: "#/components/schemas/app"
                  - $ref: "#/components/schemas/instanceId"
                  - $ref: "#/components/schemas/version"

  /system/ping:
    get:
      summary: Check daemon availability and connectivity
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  additionalInfo:
                    type: string
                    example: "OK"
