name: Develop

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04
    container: flecs/flecs-build

    strategy:
      matrix:
        arch: ["x86_64-linux-gnu", "arm-linux-gnueabihf", "aarch64-linux-gnu"]

    steps:
      - uses: actions/checkout@v2
      - name: "CMake: Configure"
        run: |
          cmake -G Ninja -B out/${{ matrix.arch }} -DCMAKE_TOOLCHAIN_FILE=build/cmake/toolchains/${{ matrix.arch }}.cmake
      - name: "CMake: Build"
        run: |
          cmake --build out/${{ matrix.arch }}
      - name: "CMake: Install"
        run: |
          cmake --build out/${{ matrix.arch }} --target install

      - name: Tar raw artifacts
        run: tar cvf out_${{ matrix.arch }}.tar out/${{ matrix.arch }}
      - name: Upload raw artifacts
        uses: actions/upload-artifact@v2
        with:
          name: out_${{ matrix.arch }}
          path: out_${{ matrix.arch }}.tar
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-20.04
    container: flecs/flecs-build

    env:
      REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
      REGISTRY_AUTH: ${{ secrets.REGISTRY_AUTH }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64,arm

      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - name: Untar raw artifacts
        run: |
          tar xf out_x86_64-linux-gnu/out_x86_64-linux-gnu.tar
          tar xf out_arm-linux-gnueabihf/out_arm-linux-gnueabihf.tar
          tar xf out_aarch64-linux-gnu/out_aarch64-linux-gnu.tar

      - name: "Docker: native"
        run: |
          cmake --build out/x86_64-linux-gnu --target docker
      - name: "Docker: armhf"
        run: |
          cmake --build out/arm-linux-gnueabihf --target docker
      - name: "Docker: aarch64"
        run: |
          cmake --build out/aarch64-linux-gnu --target docker

      - name: Tar raw artifacts
        run: tar cvf out.tar out/
      - name: Upload raw artifacts
        uses: actions/upload-artifact@v2
        with:
          name: out
          path: out.tar
          retention-days: 1

  package:
    needs: docker
    runs-on: ubuntu-20.04
    container: flecs/flecs-build

    strategy:
      matrix:
        arch: ["x86_64-linux-gnu", "arm-linux-gnueabihf", "aarch64-linux-gnu"]

    steps:
      - uses: actions/checkout@v2

      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
        with:
          name: out
      - name: Untar raw artifacts
        run: tar xf out.tar

      - name: "CMake: Package"
        run: |
          cmake --build out/${{ matrix.arch }} --target packages

      - name: Archive packages
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: |
            out/**/*.deb
            out/**/*.ipk
          retention-days: 3

      - name: Deploy packages
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MP_GITHUB_SERVER }}
          username: ${{ secrets.MP_GITHUB_USER }}
          key: ${{ secrets.MP_GITHUB_SSH_KEY }}
          passphrase: ${{ secrets.MP_GITHUB_SSH_KEY_PW }}
          source: "out/${{ matrix.arch }}/*.deb"
          target: ${{ secrets.MP_GITHUB_DEVELOP_DIR }}
          strip_components: 2
