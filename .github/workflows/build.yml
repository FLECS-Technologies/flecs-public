name: Build

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      build_type:
        required: true
        type: string
      cmake_args:
        required: false
        type: string
      flecs_build_ref:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04
    container: flecspublic.azurecr.io/flecs-build:${{ inputs.flecs_build_ref }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64,linux/arm/v7

    - name: "CMake: Configure"
      run: |
        cmake -G Ninja -B build/${{ inputs.arch }} ${{ inputs.cmake_args }} -DARCH=${{ inputs.arch }} -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}

    - name: "CMake: Build"
      run: |
        cmake --build build/${{ inputs.arch }}

    - name: "CMake: Docker"
      run: |
        cmake --install build/${{ inputs.arch }} --component docker
        cmake --build build/${{ inputs.arch }} --target docker

    - name: "CMake: Package"
      run: |
        cmake --build build/${{ inputs.arch }} --target package

    - name: "CMake: Latest"
      run: |
        cmake --build build/${{ inputs.arch }} --target version -- --quiet >build/${{ inputs.arch }}/latest_flecs_${{ inputs.arch }}

    - name: Archive Docker image archives
      uses: actions/upload-artifact@v4
      with:
        name: docker_${{ inputs.arch }}
        path: |
          build/${{ inputs.arch }}/docker/**/*.tar
        retention-days: 1

    - name: Archive packages
      uses: actions/upload-artifact@v4
      with:
        name: packages_${{ inputs.arch }}
        path: |
          build/${{ inputs.arch }}/flecs_*_${{ inputs.arch }}.deb
          build/${{ inputs.arch }}/flecs_*_${{ inputs.arch }}.tgz
          build/${{ inputs.arch }}/latest_flecs_${{ inputs.arch }}
        retention-days: 1
