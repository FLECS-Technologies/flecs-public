name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-22.04
    container: flecs/flecs-build:${{ github.ref_name }}

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: "Disable git security"
        run: |
          git config --system --add safe.directory "*"
      - name: "CMake: Configure"
        run: |
          git config --system --add safe.directory "*"
          cmake -G Ninja -B out/${{ matrix.arch }} -DARCH=${{ matrix.arch }} -DCMAKE_BUILD_TYPE=Release -DNDEBUG=1
      - name: "CMake: Build"
        run: |
          cmake --build out/${{ matrix.arch }}
      - name: "CMake: Install"
        run: |
          cmake --build out/${{ matrix.arch }} --target install

      - name: Tar raw artifacts
        run: tar cvf out_${{ matrix.arch }}.tar out/${{ matrix.arch }}
      - name: Upload raw artifacts
        uses: actions/upload-artifact@v3
        with:
          name: out_${{ matrix.arch }}
          path: out_${{ matrix.arch }}.tar
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-22.04
    container: flecs/flecs-build:${{ github.ref_name }}

    env:
      REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
      REGISTRY_AUTH: ${{ secrets.REGISTRY_AUTH }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64,arm

      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
      - name: Untar raw artifacts
        run: |
          tar xf out_amd64/out_amd64.tar
          tar xf out_armhf/out_armhf.tar
          tar xf out_arm64/out_arm64.tar

      - name: "Disable git security"
        run: |
          git config --system --add safe.directory "*"
      - name: "Docker: native"
        run: |
          cmake --build out/amd64 --target docker
      - name: "Docker: armhf"
        run: |
          cmake --build out/armhf --target docker
      - name: "Docker: aarch64"
        run: |
          cmake --build out/arm64 --target docker

      - name: Tar raw artifacts
        run: tar cvf out.tar out/
      - name: Upload raw artifacts
        uses: actions/upload-artifact@v3
        with:
          name: out
          path: out.tar
          retention-days: 1

  package:
    needs: docker
    runs-on: ubuntu-22.04
    container: flecs/flecs-build

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: out
      - name: Untar raw artifacts
        run: tar xf out.tar

      - name: "Disable git security"
        run: |
          git config --system --add safe.directory "*"
      - name: "CMake: Package"
        run: |
          cmake --build out/${{ matrix.arch }} --target packages

      - name: Archive packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            out/**/*.deb
          retention-days: 3

      - name: Deploy packages
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MP_GITHUB_SERVER }}
          username: ${{ secrets.MP_GITHUB_USER }}
          key: ${{ secrets.MP_GITHUB_SSH_KEY }}
          passphrase: ${{ secrets.MP_GITHUB_SSH_KEY_PW }}
          source: "out/${{ matrix.arch }}/*.deb"
          target: ${{ secrets.MP_GITHUB_RELEASE_DIR }}/deb/
          strip_components: 2

      - name: Deploy latest file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MP_GITHUB_SERVER }}
          username: ${{ secrets.MP_GITHUB_USER }}
          key: ${{ secrets.MP_GITHUB_SSH_KEY }}
          passphrase: ${{ secrets.MP_GITHUB_SSH_KEY_PW }}
          source: "out/${{ matrix.arch }}/latest_flecs_${{ matrix.arch }}"
          target: "${{ secrets.MP_GITHUB_RELEASE_DIR }}/"
          strip_components: 2
