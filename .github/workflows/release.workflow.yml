name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-22.04
    container: flecs/flecs-build:${{ github.ref_name }}

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      - name: "Disable git security"
        run: |
          git config --system --add safe.directory "*"
      - name: "CMake: Configure"
        run: |
          cmake -G Ninja -B build/${{ matrix.arch }} -DARCH=${{ matrix.arch }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/${{ matrix.arch }} -DNDEBUG=1
      - name: "CMake: Build"
        run: |
          cmake --build build/${{ matrix.arch }}
      - name: "CMake: Install"
        run: |
          cmake --build build/${{ matrix.arch }} --target install
      - name: "CMake: Package"
        run: |
          cmake --build build/${{ matrix.arch }} --target packages

      - name: Archive Docker image archives
        uses: actions/upload-artifact@v3
        with:
          name: docker_${{ matrix.arch }}
          path: |
            out/${{ matrix.arch }}/**/*.tar
          retention-days: 1

      - name: Archive packages
        uses: actions/upload-artifact@v3
        with:
          name: packages_${{ matrix.arch }}
          path: |
            out/${{ matrix.arch }}/*.deb
          retention-days: 3

      - name: Deploy packages
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MP_GITHUB_SERVER }}
          username: ${{ secrets.MP_GITHUB_USER }}
          key: ${{ secrets.MP_GITHUB_SSH_KEY }}
          passphrase: ${{ secrets.MP_GITHUB_SSH_KEY_PW }}
          source: "out/${{ matrix.arch }}/*.deb"
          target: ${{ secrets.MP_GITHUB_RELEASE_DIR }}/deb/
          strip_components: 2

      - name: Deploy latest file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MP_GITHUB_SERVER }}
          username: ${{ secrets.MP_GITHUB_USER }}
          key: ${{ secrets.MP_GITHUB_SSH_KEY }}
          passphrase: ${{ secrets.MP_GITHUB_SSH_KEY_PW }}
          source: "out/${{ matrix.arch }}/latest_flecs_${{ matrix.arch }}"
          target: "${{ secrets.MP_GITHUB_RELEASE_DIR }}/"
          strip_components: 2

  docker-hub:
    needs: build
    runs-on: ubuntu-22.04
    container: flecs/flecs-build:${{ github.ref_name }}

    steps:
      - name: Download Docker image archives
        uses: actions/download-artifact@v3
        with:
          path: out/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_AUTH }}

      - name: Push Docker images
        run: |
          for archive in `find out/ -name "*.tar"`; do \
            DOCKER_IMAGE=$(docker load --quiet --input ${archive} | cut -f2- -d ':'); \
            DOCKER_IMAGES="${DOCKER_IMAGES} `echo ${DOCKER_IMAGE} | sed -E 's/(.*)-.+$/\1/p'`"; \
            docker push ${DOCKER_IMAGE}; \
          done; \
          DOCKER_IMAGES=`echo ${DOCKER_IMAGES} | sed 's/ /\n/g' | sort -u`; \
          for image in ${DOCKER_IMAGES}; do \
            docker manifest create ${image} ${image}-amd64 ${image}-arm64 ${image}-armhf; \
            docker manifest create ${image/:*/:latest} ${image}-amd64 ${image}-arm64 ${image}-armhf; \
            docker manifest push ${image}; \
            docker manifest push ${image/:*/:latest}; \
          done
        shell: bash
